variables:
 - name: project_name
   value: Maya-Commander
 - name: esp_project_name
   value: esp-8266-device

trigger:
  branches:
    include:
    - '*'
    exclude:
    - artifacts

stages:
 - stage: ESP8266_device
   
   dependsOn: [] #build
   
   jobs:
    - job: build
      strategy:
        matrix:
          ubuntu_22_04:
            os_image: 'ubuntu-22.04'
            agent_pool: 'Azure Pipelines'
      pool:
        vmImage: $(os_image)
        name: $(agent_pool)
      
      condition: true
      timeoutInMinutes: 50
      steps:
       - script: sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python-is-python3 python-serial
         displayName: "Install the required packages for $(esp_project_name)"
         condition: succeeded()
       - script: wget -o xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz
         displayName: "Download xtensa-elf-gcc for linux amd64"
         condition: succeeded()
       - script: ls -la
         displayName: "ls -la"
         condition: succeeded()
       - script: git submodule update --init --recursive
         displayName: "Init Git Submodules"
         condition: succeeded()
      # - script: cd maya && cmake -S . -B ./build/
      #   displayName: "CMake: Create Project"
      #   condition: succeeded()
      # - script: cd maya/script && cb-cmd-build.bat
      #   displayName: "CMake: Compile and Link (windows)"
      #   condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
      # - script: cd maya/script && ./ub-unix-build.sh 
      #   displayName: "CMake: Compile and Link (unix)"
      #   condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT' ))
      # - script: cd maya && ./build/test/TEST-$(project_name)
      #   displayName: "Run Tests on Linux / Mac OS"
      #   condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))
      # - script: dir maya\build\Debug\ && cd maya && .\build\Debug\TEST-$(project_name).exe
      #   displayName: "Run Tests on Windows"
      #   condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))

 - stage: Maya_Commander
   
   dependsOn: [] #build
   
   jobs:
    - job: analyze_multiple_json_configs
      strategy:
        matrix:
          ubuntu_20_04:
            os_image: 'ubuntu-20.04'
            agent_pool: 'Azure Pipelines'
      pool:
        vmImage: $(os_image)
        name: $(agent_pool)
      condition: eq(variables['Build.Reason'], 'IndividualCI')
      timeoutInMinutes: 180
      steps:      
       - script: ls -la
         displayName: "test"
         condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT'))         
         